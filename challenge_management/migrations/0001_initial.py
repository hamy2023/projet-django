# Generated by Django 4.1.7 on 2023-05-16 12:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BankOfQuestions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
            options={
                "verbose_name": "Bank of question",
            },
        ),
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Hackathon", "Hackathon"),
                            ("Job Challenge", "Job Challenge"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "challenge_team_type",
                    models.CharField(
                        choices=[
                            ("Team challenge", "Team"),
                            ("Individual challenge", "Individual"),
                        ],
                        max_length=255,
                    ),
                ),
                ("topic", models.CharField(max_length=255)),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("1 star", "1 star"),
                            ("2 star", "2 star"),
                            ("3 star", "3 star"),
                            ("4 star", "4 star"),
                            ("5 star", "5 star"),
                        ],
                        max_length=255,
                    ),
                ),
                ("description", models.TextField(default="")),
                ("status", models.BooleanField(default=False)),
                ("prizes", models.TextField(default="")),
                ("rules", models.TextField(default="")),
                ("getStarted", models.TextField(default="")),
                ("judging_criteria", models.TextField(default="")),
                ("haveGrader", models.BooleanField(default=False)),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="challenge_images/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChallengeSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submission", models.TextField()),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="challenge_management.challenge",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Draft",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Hackathon", "Hackathon"),
                            ("Job Challenge", "Job Challenge"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "challenge_team_type",
                    models.CharField(
                        choices=[
                            ("Team challenge", "Team"),
                            ("Individual challenge", "Individual"),
                        ],
                        max_length=255,
                    ),
                ),
                ("topic", models.CharField(max_length=255)),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("1 star", "1 star"),
                            ("2 star", "2 star"),
                            ("3 star", "3 star"),
                            ("4 star", "4 star"),
                            ("5 star", "5 star"),
                        ],
                        max_length=255,
                    ),
                ),
                ("description", models.TextField(default="")),
                ("status", models.BooleanField(default=False)),
                ("prizes", models.TextField(default="")),
                ("rules", models.TextField(default="")),
                ("getStarted", models.TextField(default="")),
                ("judging_criteria", models.TextField(default="")),
                ("haveGrader", models.BooleanField(default=False)),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="challenge_images/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("team_name", models.CharField(max_length=255)),
                (
                    "challenge",
                    models.ManyToManyField(to="challenge_management.challenge"),
                ),
                (
                    "developer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeamSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submission", models.TextField()),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_submissions",
                        to="challenge_management.challenge",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_submissions",
                        to="challenge_management.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Solution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "challenge",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="challenge_management.challenge",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("points", models.IntegerField(default=0)),
                ("vr", models.BooleanField(default=False)),
                ("editor", models.BooleanField(default=True)),
                (
                    "bank",
                    models.ForeignKey(
                        blank=True,
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="challenge_management.bankofquestions",
                    ),
                ),
                (
                    "challenge",
                    models.ManyToManyField(to="challenge_management.challenge"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Planning",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "challenge",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="challenge_management.challenge",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Evaluation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("grade", models.IntegerField()),
                ("feedback", models.TextField()),
                (
                    "challenge",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="challenge_management.challenge",
                    ),
                ),
                (
                    "individual_submission",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="challenge_management.challengesubmission",
                    ),
                ),
                (
                    "intructor",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team_submission",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="challenge_management.teamsubmission",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DraftSolution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "draft",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="challenge_management.draft",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DraftQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("points", models.IntegerField(default=0)),
                ("vr", models.BooleanField(default=False)),
                ("editor", models.BooleanField(default=True)),
                ("draft", models.ManyToManyField(to="challenge_management.draft")),
            ],
        ),
    ]
